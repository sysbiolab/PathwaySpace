% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pspaceMethods.R
\docType{methods}
\name{polarProjection,PathwaySpace-method}
\alias{polarProjection,PathwaySpace-method}
\alias{polarProjection}
\title{Spatial Projection of Graph-Associated Signals}
\usage{
\S4method{polarProjection}{PathwaySpace}(
  ps,
  k = 8,
  pdist = 0.15,
  theta = 180,
  directional = FALSE,
  rescale = TRUE,
  pdist.anchor = c("frame", "edge"),
  verbose = TRUE,
  decay.fun = signalDecay(),
  aggregate.fun = signalAggregation()
)
}
\arguments{
\item{ps}{A \linkS4class{PathwaySpace} class object.}

\item{k}{A single positive integer determining the k-top signals in the 
signal convolution operation.}

\item{pdist}{A term (in \code{[0, 1]}) determining a distance unit for 
the signal decay function. This distance unit will affect the extent over 
which the convolution operation projects the signal from source to 
destination points, normalized by the \code{pdist.anchor} setting.
When \code{pdist.anchor = "frame"}, \code{pdist} is scaled to the coordinate 
space and adjusted to \code{theta}, aiming to preserve the projected area 
around the source points. When \code{pdist.anchor = "edge"}, \code{pdist} 
is scaled to match edge lengths, aiming to constrain signal projections 
within edge bounds.}

\item{theta}{Angle of projection (degrees in \code{(0,360]}).}

\item{directional}{If directional edges are available, this argument can 
be used to orientate the signal projection on directed graphs.}

\item{rescale}{A single logical value indicating whether to rescale 
the signal. If the signal \code{>=0}, then it will be rescaled to 
\code{[0, 1]}; if the signal \code{<=0}, then it will be rescaled to 
\code{[-1, 0]}; and if the signal in \code{(-Inf, +Inf)}, then it will be 
rescaled to \code{[-1, 1]}.}

\item{pdist.anchor}{A reference frame for distance normalization. Use 
\code{"frame"} to scale distances using a coordinate-space normalization, 
or \code{"edge"} to scale distances based edge-length normalization. 
This affects how projected signals are scaled and accumulated. 
Default is \code{"frame"}.}

\item{verbose}{A single logical value specifying to display detailed 
messages (when \code{verbose=TRUE}) or not (when \code{verbose=FALSE}).}

\item{decay.fun}{A signal decay function. Available options include 
'Weibull', 'exponential', and 'linear' (see \code{\link{signalDecay}}).
Users may also define a custom decay model with at least two arguments, 
e.g., \code{function(x, signal) \{ ... \}}, which should returns a vector of  
projected signals of the same length as \code{x}. Additional arguments may  
include any variable available as graph vertex attribute.}

\item{aggregate.fun}{A function used to aggregate the projected signals. 
It must be provided as a unary function, e.g., \code{function(x) { ... }}, 
which should aggregate a vector of signals to a single scalar value. 
Available options include 'mean', 'wmean', 'log.wmean', and 'exp.wmean' 
(See \code{\link{signalAggregation}}).}
}
\value{
A preprocessed \linkS4class{PathwaySpace} class object.
}
\description{
\code{polarProjection} implements a convolution algorithm
to project signals across a 2D-coordinate system.
}
\examples{
# Load a demo igraph
data('gtoy2', package = 'RGraphSpace')

# Create a new PathwaySpace object
ps <- buildPathwaySpace(gtoy2, nrc = 100)
# note: adjust 'nrc' to increase image resolution

# Set '1s' as vertex signal
vertexSignal(ps) <- 1

# Create a 2D-landscape image
ps <- polarProjection(ps)

}
\seealso{
\code{\link{buildPathwaySpace}}
}
\author{
Mauro Castro
}
